openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/login:
    post:
      summary: ''
      operationId: postApiLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: nicolas.catharine@example.org
                password:
                  type: string
                  description: ''
                  example: ducimus
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: ''
      operationId: postApiRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: xxmpflinemv
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: nayeli.rodriguez@example.net
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: '~a#!&Wgyo,=o6HWb'
              required:
                - name
                - email
                - password
      security: []
  /api/tasks:
    get:
      summary: ''
      operationId: getApiTasks
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiTasks
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: jlmjggmjtkuwzpdpjotcye
                description:
                  type: string
                  description: ''
                  example: 'Consequatur unde quia et est itaque repellendus inventore.'
                project_id:
                  type: string
                  description: ''
                  example: quam
                user_id:
                  type: string
                  description: ''
                  example: vel
              required:
                - title
                - project_id
                - user_id
      security: []
  '/api/tasks/{id}':
    get:
      summary: ''
      operationId: getApiTasksId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiTasksId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: modi
                description:
                  type: string
                  description: ''
                  example: 'Architecto laborum consequatur vitae et soluta laboriosam beatae.'
                completed:
                  type: boolean
                  description: ''
                  example: false
                project_id:
                  type: string
                  description: ''
                  example: null
                user_id:
                  type: string
                  description: ''
                  example: ipsam
              required:
                - title
                - completed
                - user_id
      security: []
    delete:
      summary: ''
      operationId: deleteApiTasksId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the task.'
        example: 8
        required: true
        schema:
          type: integer
  /api/project:
    get:
      summary: ''
      operationId: getApiProject
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiProject
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ekcktepwada
              required:
                - name
      security: []
  '/api/project/{id}':
    get:
      summary: ''
      operationId: getApiProjectId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiProjectId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: kjydjkhcwmquxl
              required:
                - name
      security: []
    delete:
      summary: ''
      operationId: deleteApiProjectId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the project.'
        example: 15
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
